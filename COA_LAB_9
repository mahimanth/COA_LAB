1. Write a program in assembly language to take two single-digit numbers as
input and display whether they are equal or not.
Code:
ORG 100h
MOV DX, OFFSET msg_input1
MOV AH, 09h
INT 21h
; Read the first digit from the user
MOV AH, 01h
INT 21h
MOV BL, AL
; Display the message "Enter the second digit: "
MOV DX, OFFSET msg_input2
MOV AH, 09h
INT 21h
; Read the second digit from the user
MOV AH, 01h
INT 21h


MOV CL, AL
; Compare the two digits
CMP BL, CL
JE digits_equal ; Jump if equal
; Display message for not equal
MOV DX, OFFSET msg_not_equal
MOV AH, 09h
INT 21h
JMP end_program
digits_equal:
; Display message for equal
MOV DX, OFFSET msg_equal
MOV AH, 09h
INT 21h
end_program:
; Terminate the program
MOV AH, 4Ch
INT 21h
; Data section with messages
msg_input1 DB 'Enter the first digit: $'
msg_input2 DB 0Dh, 0Ah, 'Enter the second digit: $'


msg_equal DB 0Dh, 0Ah, 'The digits are equal.$'
msg_not_equal DB 0Dh, 0Ah, 'The digits are not equal.$'
END
Output:


2. Write a program in assembly language to check whether a single-digit
number is odd or even.
Code:
ORG 100h
MOV DX, OFFSET msg_input
MOV AH, 09h
INT 21h
MOV AH, 01h
INT 21h
CMP AL, '0'
JB invalid_input
CMP AL, '9'
JA invalid_input


AND AL, 1
JZ even_number
MOV DX, OFFSET msg_odd
MOV AH, 09h
INT 21h
JMP end_program
even_number:
MOV DX, OFFSET msg_even
MOV AH, 09h
INT 21h
JMP end_program
invalid_input:
MOV DX, OFFSET msg_invalid
MOV AH, 09h
INT 21h
end_program:
MOV AH, 4Ch
INT 21h


msg_input DB 'Enter a single-digit number: $'
msg_even DB 0Dh, 0Ah, 'The number is even.$'
msg_odd DB 0Dh, 0Ah, 'The number is odd.$'
msg_invalid DB 0Dh, 0Ah, 'Invalid input. Please enter a single-digit number (0-
9).$'
END
Output:


